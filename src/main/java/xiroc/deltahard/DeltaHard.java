package xiroc.deltahard;

import java.io.File;
import java.util.ArrayList;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import net.minecraft.init.Blocks;
import net.minecraft.util.text.TextFormatting;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.fml.common.Loader;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.registry.ForgeRegistries;
import net.minecraftforge.fml.common.registry.GameRegistry;
import xiroc.deltahard.util.EventManager;
import xiroc.deltahard.util.Reference;
import xiroc.deltahard.world.WorldGenOre;

@Mod(modid = Reference.MODID, name = Reference.NAME, version = Reference.VERSION, acceptedMinecraftVersions = Reference.MINECRAFTVERSIONS)
public class DeltaHard {


	public static final Logger logger = LogManager.getLogger("DeltaHard");
	
	//BlockSlab, BlockStoneSlab, BlockWoodSlab, BlockFalling

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		logger.info("HELLO WORLD");
		ModMetadata data = event.getModMetadata();
		data.autogenerated = false;
		data.name = TextFormatting.RED + "" + TextFormatting.BOLD + "Delta Hard";
		data.version = "0.3.2";
		data.authorList.add("XIROC");
		data.credits = Reference.CREDITS;
		data.url = "https://www.minecraftforum.net/forums/mapping-and-modding-java-edition/minecraft-mods/requests-ideas-for-mods/2939816-mod-idea-delta-hard-mode";
		data.description = TextFormatting.RED + "" + TextFormatting.UNDERLINE
				+ "There will be some json syntax exceptions when loading a world due to removed recipes. This is not a problem and there is currently no way to avoid that.";
		MinecraftForge.EVENT_BUS.register(new EventManager());
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		GameRegistry.registerWorldGenerator(new WorldGenOre(), 1);
	}
	
	

}
